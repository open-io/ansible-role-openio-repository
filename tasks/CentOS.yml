---
- name: Check if the repository is available
  uri:
    url: "{{ openio_repository_mirror_url_base }}/{{ repo.key }}/{{ repo.value.release }}/el/{{ ansible_distribution_major_version }}"
  with_dict: "{{ openio_repository_products }}"
  when:
    - repo.value.state is not defined or repo.value.state != 'absent'
    - openio_repository_check_reachability
  loop_control:
    loop_var: repo
  no_log: '{{ openio_repository_no_log }}'
  tags: install

# For customers that refuse our EPEL internal mirror
- name: "Configure upstream EPEL repository"
  package:
    name: "epel-release"
    state: present
  when:
    - openio_repository_manage_epel_repository
    - openio_repository_epel_upstream_repository
  tags: install

- name: "Configure openio EPEL mirror"
  yum_repository:
    name: "openio-EPEL-{{ ansible_distribution_major_version }}"
    description: "OpenIO EPEL {{ ansible_distribution_major_version }} packages for Entreprise Linux $releasever - $basearch"
    file: "openio-EPEL-{{ ansible_distribution_major_version }}"
    baseurl: "{{ openio_repository_mirror_root_url }}/epel/{{ ansible_distribution_major_version }}/$basearch"
    gpgkey: "{{ openio_repository_mirror_root_url }}/epel/{{ openio_repository_gpgkey_epel }}"
    exclude: ['netdata']
    state: present
    enabled: "yes"
    gpgcheck: "yes"
  when:
    - openio_repository_manage_epel_repository
    - not openio_repository_epel_upstream_repository
  no_log: '{{ openio_repository_no_log }}'
  tags: install

- name: "Setup the repository key"
  rpm_key:
    state: present
    key: "{{ openio_repository_mirror_url_base_nocreds }}/{{ openio_repository_gpgkey }}"
  tags: install

- name: "Configure OpenIO repositories for {{ ansible_distribution }} {{ ansible_distribution_major_version }}"
  yum_repository:
    name: "openio-{{ repo.key }}-{{ repo.value.release }}"
    description: "OpenIO {{ repo.key }} {{ repo.value.release }} packages for Entreprise Linux $releasever - $basearch"
    file: "openio-{{ repo.key }}-{{ repo.value.release }}"
    baseurl: "{{ openio_repository_mirror_url_base }}/{{ repo.key }}/{{ repo.value.release }}/el/$releasever/$basearch"
    state: "{{ repo.value.state | default(openio_repository_product_state_default) }}"
    enabled: "yes"
    gpgcheck: "yes"
  with_dict: "{{ openio_repository_products }}"
  loop_control:
    loop_var: repo
  no_log: '{{ openio_repository_no_log }}'
  tags: install

- name: "Configure OpenIO source repositories for {{ ansible_distribution }} {{ ansible_distribution_major_version }}"
  yum_repository:
    name: "openio-{{ repo.key }}-{{ repo.value.release }}-source"
    description: "OpenIO {{ repo.key }} {{ repo.value.release }} packages for Entreprise Linux $releasever - $basearch - Source"
    file: "openio-{{ repo.key }}-{{ repo.value.release }}"
    baseurl: "{{ openio_repository_mirror_url_base }}/{{ repo.key }}/{{ repo.value.release }}/el/$releasever/SRPM"
    state: "{{ repo.value.state | default(openio_repository_product_state_default) }}"
    enabled: "no"
    gpgcheck: "yes"
  with_dict: "{{ openio_repository_products }}"
  loop_control:
    loop_var: repo
  no_log: '{{ openio_repository_no_log }}'
  tags: install

- name: "Package exclusions from EPEL to avoid conflicts with other repositories (OpenStack, OpenIO)"
  ini_file:
    dest: /etc/yum.repos.d/epel.repo
    section: epel
    option: exclude
    value: netdata
  tags: install
  when:
    - openio_repository_manage_epel_repository
    - openio_repository_epel_upstream_repository

# The netdata exclusion is done with the yum_repository to maintain idempotency
# in case openio_repository_epel_upstream_repository is false

# For customers that refuse our OpenStack internal mirror
- name: "Configure upstream OpenStack {{ openio_repository_openstack_release }} release repository"
  package:
    name: "centos-release-openstack-{{ openio_repository_openstack_release }}"
    state: present
  when:
    - openio_repository_manage_openstack_repository
    - openio_repository_openstack_upstream_repository
  tags: install

- name: "Configure OpenIO OpenStack {{ openio_repository_openstack_release }} release mirror"
  yum_repository:
    name: "openio-openstack-{{ openio_repository_openstack_release }}"
    description: "OpenIO OpenStack {{ openio_repository_openstack_release }} packages for Entreprise Linux $releasever - $basearch"
    file: "openio-openstack-{{ openio_repository_openstack_release }}"
    baseurl: "{{ openio_repository_mirror_root_url }}/openstack/$releasever/cloud/$basearch/openstack-{{ openio_repository_openstack_release }}"
    gpgkey: "{{ openio_repository_mirror_root_url }}/openstack/$releasever/cloud/{{ openio_repository_gpgkey_openstack }}"
    state: present
    enabled: "yes"
    gpgcheck: "yes"
  when:
    - openio_repository_manage_openstack_repository
    - not openio_repository_openstack_upstream_repository
  no_log: '{{ openio_repository_no_log }}'
  tags: install

...
