---
- name: Check if the repository is available
  uri:
    url: "{{ openio_repository_mirror_url_base }}/{{ repo.key }}/{{ repo.value.release }}/el/{{ ansible_distribution_major_version }}"
  with_dict: "{{ openio_repository_products }}"
  when:
    - repo.value.state is not defined or repo.value.state != 'absent'
    - openio_repository_check_reachability
  loop_control:
    loop_var: repo
  no_log: '{{ openio_repository_no_log }}'
  tags: install

- name: "Configure EPEL repository"
  package:
    name: "epel-release"
    state: present
  when: openio_repository_manage_epel_repository
  tags: install

- name: "Setup the repository key"
  rpm_key:
    state: present
    key: "{{ openio_repository_mirror_url_base_nocreds }}/{{ openio_repository_gpgkey }}"
  tags: install

- name: "Configure repositories for {{ ansible_distribution}} {{ ansible_distribution_major_version }}"
  yum_repository:
    name: "openio-{{ repo.key }}-{{ repo.value.release | replace('/', '-') }}"
    description: "OpenIO {{ repo.key }} {{ repo.value.release }} packages for Entreprise Linux $releasever - $basearch"
    file: "openio-{{ repo.key }}-{{ repo.value.release | replace('/', '-') }}"
    baseurl: "{{ openio_repository_mirror_url_base }}/{{ repo.key }}/{{ repo.value.release }}/el/$releasever/$basearch"
    state: "{{ repo.value.state | default(openio_repository_product_state_default) }}"
    enabled: "yes"
    gpgcheck: "yes"
  with_dict: "{{ openio_repository_products }}"
  loop_control:
    loop_var: repo
  no_log: '{{ openio_repository_no_log }}'
  tags: install

# This is not setup for "unstable" releases (f.e.: '19.10/unstable', see `when` clause below)
- name: "Configure source repositories for {{ ansible_distribution }} {{ ansible_distribution_major_version }}"
  yum_repository:
    name: "openio-{{ repo.key }}-{{ repo.value.release }}-source"
    description: "OpenIO {{ repo.key }} {{ repo.value.release }} packages for Entreprise Linux $releasever - $basearch - Source"
    file: "openio-{{ repo.key }}-{{ repo.value.release }}"
    baseurl: "{{ openio_repository_mirror_url_base }}/{{ repo.key }}/{{ repo.value.release }}/el/$releasever/SRPM"
    state: "{{ repo.value.state | default(openio_repository_product_state_default) }}"
    enabled: "no"
    gpgcheck: "yes"
  with_dict: "{{ openio_repository_products }}"
  when: "'/' not in repo.value.release"
  loop_control:
    loop_var: repo
  no_log: '{{ openio_repository_no_log }}'
  tags: install

- name: "Package exclusions from EPEL to avoid conflicts with other repositories (OpenStack, OpenIO)"
  ini_file:
    dest: /etc/yum.repos.d/epel.repo
    section: epel
    option: exclude
    value: netdata
  tags: install

- name: "Configure Openstack {{ openio_repository_openstack_release }} release repository"
  package:
    name: "centos-release-openstack-{{ openio_repository_openstack_release }}"
    state: present
  when: openio_repository_manage_openstack_repository
  tags: install
...
